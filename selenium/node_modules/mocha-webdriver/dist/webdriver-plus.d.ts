import { promise, WebElement, WebElementPromise } from 'selenium-webdriver';
/**
 * This is implemented by both the WebDriver, and individual WebElements.
 */
export interface IFindInterface {
    /**
     * Shorthand to find element by css selector.
     */
    find(selector: string): WebElementPromise;
    /**
     * Shorthand to wait for an element to be present, using a css selector.
     */
    findWait(timeoutSec: number, selector: string, message?: string): WebElementPromise;
    /**
     * Shorthand to find all elements matching a css selector.
     */
    findAll(selector: string): Promise<WebElement[]>;
    /**
     * Shorthand to find all elements matching a css selector and to apply a mapper to each
     * of the found elements. e.g. findAll('a', (el) => el.getAttribute('href'))
     */
    findAll<T>(selector: string, mapper: (e: WebElement) => promise.Promise<T>): Promise<T[]>;
    /**
     * Find elements by a css selector, and filter by getText() matching the given regex.
     */
    findContent(selector: string, contentRE: RegExp): WebElementPromise;
}
declare module "selenium-webdriver" {
    /**
     * Enhanced WebDriver with shorthand find*() methods.
     */
    interface WebDriver extends IFindInterface {
    }
    /**
     * Enhanced WebElement, with shorthand find*() methods, and chainable do*() methods.
     */
    interface WebElement extends IFindInterface {
        doClick(): WebElementPromise;
        doSendKeys(...args: string[]): WebElementPromise;
        doSubmit(): WebElementPromise;
        doClear(): WebElementPromise;
        value(): promise.Promise<string>;
        describe(): Promise<string>;
    }
    interface Capabilities {
        getBrowserName(): string | undefined;
        getPlatform(): string | undefined;
    }
}
